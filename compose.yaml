networks:
  kk:
    driver: bridge

services:
  postgres:
    image: postgres:alpine
    container_name: postgres_db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data:rw
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kk
  
  redis:
    image: redis:alpine
    container_name: redis_db
    volumes:
      - ./redis_data:/data:rw
    networks:
      - kk

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - kk
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - ./minio_data:/data
    command: server --console-address ":9001" /data
  
  auth_service:
    image: golang:latest
    container_name: auth_service
    volumes:
      - ./authentication_service:/app/data:rw
    env_file:
      - .envrc
    networks:
      - kk
    depends_on:
      - postgres
      - redis
    expose:
      - 5001
    working_dir: /app/data/cmd
    command: sh -c "apt-get update && apt-get install -y uuid-runtime && go run ."
  
  video_upload_service:
    image: golang:latest
    container_name: video_upload_service
    volumes:
      - ./video_upload_service:/app/data:rw
      - ./web/videos:/app/data/videos:rw
    networks:
      - kk
    expose:
      - 5002
    working_dir: /app/data/cmd
    command: go run .
  
  video_processing_service:
    image: golang:latest
    container_name: video_processing_service
    volumes:
      - ./video_processing_service:/app/data:rw
      - ./web/videos:/app/data/videos:rw
    env_file:
      - .env
    networks:
      - kk
    expose:
      - 5003
    working_dir: /app/data/cmd
    entrypoint: sh -c "
      apt-get update && apt-get install -y ffmpeg s3fs && 
      echo '${MINIO_USER_NAME}:${MINIO_USER_PASSWORD}' > /etc/passwd-s3fs &&
      chmod 600 /etc/passwd-s3fs &&
      mkdir -p /mnt/minio &&
      s3fs ${MINIO_BUCKET_NAME} /mnt/minio -o passwd_file=/etc/passwd-s3fs -o url=http://minio:9000 -o use_path_request_style &&
      go run ."

  gateway:
    image: golang:latest
    container_name: api_gateway
    volumes:
      - ./api_gateway:/app/data
    networks:
      - kk
    depends_on:
      - auth_service
      - video_upload_service
      - video_processing_service
      - postgres
      - redis
    ports:
      - "8088:8088"
    working_dir: /app/data/cmd
    command: go run .
